{"version":3,"sources":["index.js"],"names":["App","useState","startStop","setStartStop","wait","setWait","hours","setHours","minutes","setMinutes","seconds","setSeconds","useEffect","interval","setInterval","prevSeconds","clearInterval","prevMinutes","prevHours","className","onClick","prevStartStop","prevWait","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAIA,SAASA,IACL,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,oBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAEA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA8BN,mBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAA8BR,mBAAS,GAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KA6CA,OA3CAC,qBAAU,WACR,IAAIC,EAAW,KACf,GAAGX,IAAcE,EACfS,EAAWC,aAAY,WACrBH,GAAW,SAAAI,GAAW,OAAIA,EAAa,OACvC,SACG,CACL,GAAGX,EAAO,OAAOY,cAAcH,GAC/BG,cAAcH,GACdF,EAAW,GACXF,EAAW,GACXF,EAAS,GAEX,OAAO,WAAOS,cAAcH,MAC5B,CAACX,EAAUE,IAGbQ,qBAAU,WACO,KAAZF,IACDC,EAAW,GACXF,GAAW,SAAAQ,GAAW,OAAIA,EAAa,MAE1B,KAAZT,IACDC,EAAW,GACXF,GAAS,SAAAW,GAAS,OAAIA,EAAW,QAEnC,CAACR,IAkBD,mCACA,qBAAKS,UAAU,iBAAf,SACE,sBAAKA,UAAU,cAAf,UACE,2CACA,sBAAKA,UAAU,mBAAf,UAAmCb,EAAM,GAAN,WAAaA,GAAQA,EAAxD,IAAgEE,EAAQ,GAAR,WAAeA,GAAUA,EAAzF,IAAmGE,EAAQ,GAAR,WAAeA,GAAUA,KAC5H,gCACE,wBAAQU,QAtBhB,WACEjB,GAAa,SAAAkB,GAAa,OAAKA,KAC/BhB,GAAQ,IAoBF,0BACA,wBAAQe,QAlBhB,WACEf,GAAQ,SAAAiB,GAAQ,OAAKA,MAiBf,kBACA,wBAAQF,QAfhB,WACEf,GAAQ,GACRF,GAAa,SAAAkB,GAAa,OAAKA,KAC/BE,YAAW,WAAKpB,GAAa,SAAAkB,GAAa,OAAKA,OAAiB,KAY1D,6BAQZG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC1B,EAAD,MAEF2B,SAASC,eAAe,W","file":"static/js/main.5456dc4a.chunk.js","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction App() {\n    const [startStop, setStartStop] = useState(false);\n    const [wait, setWait] = useState(false);\n  \n    const [hours, setHours] = useState(0);\n    const [minutes, setMinutes] = useState(0);\n    const [seconds, setSeconds] = useState(0);\n  \n    useEffect(()=>{\n      let interval = null;\n      if(startStop && !wait) {\n        interval = setInterval(()=>{\n          setSeconds(prevSeconds => prevSeconds +1)\n        },1000)\n      } else {\n        if(wait) {return clearInterval(interval);} \n        clearInterval(interval);\n        setSeconds(0);\n        setMinutes(0);\n        setHours(0);\n      }\n      return () => {clearInterval(interval)}\n    },[startStop,wait])\n  \n  \n    useEffect(()=> {\n      if(seconds === 60) {\n        setSeconds(0);\n        setMinutes(prevMinutes => prevMinutes +1)\n      }\n      if(minutes === 60) {\n        setMinutes(0);\n        setHours(prevHours => prevHours +1)\n      }\n    },[seconds]);\n  \n    function handleStartStopClick() {\n      setStartStop(prevStartStop => !prevStartStop);\n      setWait(false)\n    }\n  \n    function handleWaitClick() {\n      setWait(prevWait => !prevWait);\n    }\n  \n    function handleResetClick() {\n      setWait(false)\n      setStartStop(prevStartStop => !prevStartStop);\n      setTimeout(()=>{setStartStop(prevStartStop => !prevStartStop);},10)\n    }\n  \n    return (\n      <>\n      <div className=\"timer__wrapper\">\n        <div className=\"timer__item\">\n          <h1>Stopwatch</h1>\n          <div className=\"timer__item-time\">{hours<10?`0${hours}`:hours}:{minutes<10?`0${minutes}`:minutes}:{seconds<10?`0${seconds}`:seconds}</div>\n          <div>\n            <button onClick={handleStartStopClick}>Start / Stop</button>\n            <button onClick={handleWaitClick}>Wait</button>\n            <button onClick={handleResetClick}>Reset</button>\n          </div>\n        </div>\n      </div>\n      </>\n    );\n  }\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}